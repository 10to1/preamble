---
- hosts: all
  tasks:
    - name: Check for homebrew
      stat: path=/usr/local/Cellar
      register: brew_installed
    - name: Install homebrew if needed
      shell: >
                ruby -e "$(curl -fsSL https://raw.github.com/Homebrew/homebrew/go/install)"
      when: brew_installed.stat.exists == false
    - include: ruby.yml
    - include: ios.yml
    - name: Install node
      homebrew: name=node state=present
    - name: Install nginx
      homebrew: name=node state=present
    - name: Load nginx at startup
      file: src=/usr/local/opt/nginx/homebrew.mxcl.nginx.plist dest=/Library/LaunchDaemons/homebrew.mxcl.nginx.plist state=link
      sudo: yes
    - name: Make sure it can run as root
      file: path=/usr/local/opt/nginx/homebrew.mxcl.nginx.plist owner=root group=wheel
      sudo: yes
    - name: Create sites directory
      file: path=/usr/local/etc/nginx/sites state=directory
    - name: Start nginx
      command: launchctl load /Library/LaunchDaemons/homebrew.mxcl.nginx.plist
      sudo: yes
    - name: Load all vhosts
      lineinfile: "dest=/usr/local/etc/nginx/nginx.conf insertafter='http {' line='    include /usr/local/etc/nginx/sites/*.conf; # nginx-app; Load all vhosts'"
    - name: Install dnsmasq
      homebrew: name=dnsmasq state=present
    - name: Setup dnsmasq conf for *.dev
      lineinfile: dest=/usr/local/etc/dnsmasq.conf line='address=/.dev/127.0.0.1' state=present create=yes
    - name: Setup dnsmqas autolaunch
      copy: src=/usr/local/opt/dnsmasq/homebrew.mxcl.dnsmasq.plist dest=/Library/LaunchDaemons/homebrew.mxcl.dnsmasq.plist owner=root group=wheel
      sudo: yes
    - name: Launch dnsmasq
      command: launchctl load /Library/LaunchDaemons/homebrew.mxcl.dnsmasq.plist
      sudo: yes
    - name: Setup resolver directory
      file: path=/etc/resolver state=directory
      sudo: yes
    - name: Redirect all *.dev requests to dnsmasq
      lineinfile: dest=/etc/resolver/dev line='nameserver 127.0.0.1' create=yes state=present
      sudo: yes
    - name: Common utilities
      homebrew: name={{ item }} state=present
      with_items:
        - git
        - ag # [A code-searching tool similar to ack, but faster](http://geoff.greer.fm/ag/)
        - gh # [Fast github command client](https://github.com/jingweno/gh)
        - tmux # [A better screen](http://tmux.sourceforge.net)
        - links # [Browse in the terminal](http://links.twibright.com)
        - ngrok # [Easy way to get a public IP](https://ngrok.com)
        - htop # [A better top](http://hisham.hm/htop/)
        - heroku # Heroku Toolbelt
        - mosh # [A better ssh (sometimes)](https://mosh.mit.edu)
    - name: Fetchez la mail
      homebrew: name={{ item }} state=present
      with_items:
        - mutt
        - offlineimap # Fetch mails
        - lbdb # Talk to AddressBook
        - msmtp # Send mails
        - notmuch # Finding all the mails
    - name: Install pure (simple and sleak prompt)
      npm: name=pure-prompt global=yes
    - name: Install Applications
      homebrew_cask: name={{ item }} state=present
      with_items:
        - google-chrome # Mainly for it's handier shortcuts
        - dropbox       # Necessary evil
        - onepassword   # Password manager
        - adium         # IM
        - hipchat       # not a fan, but needed
        - firefox       # mainly for testing purposes
        - iterm2        # a better Terminal
        - arq           # backup
        - spotify       # music
        - mailmate      # gui mail
        - transmission  # torrents
        - cyberduck     # (s)ftp
        - daisydisk     # disk usage
        - base          # sqlite browser
        - colorpicker-developer # A better color picker (easy access to html/UIColor)
        - vlc
        - qlstephen # Quicklook any possible text file. You need this.
        - calibre # Probably the best ebook app out there.
        - lastfm # My favorite social network to never visit.
        - omnigraffle # Mostly for wireframing
        - cloak # VPN without the hassle.
        - the-unarchiver # [A more capable unzip/rar/all_the_things-er](http://wakaba.c3.cx/s/apps/unarchiver)
        - iphone-configuration-utility # [A sane way to handle the Provisioning profile mess](http://support.apple.com/kb/DL1465)
        - xscreensaver # [jwz's collection of screensaver](http://www.jwz.org/xscreensaver/)
    - name: Tap homebrew fonts
      homebrew_tap: tap=caskroom/fonts state=present
    - name: Install DejaVu Sans Mono
      homebrew_cask: name=font-dejavu-sans
    - name: Tap Railwaycat\'s emacs port
      homebrew_tap: tap=railwaycat/emacsmacport state=present
    - name: Install Railwaycat\'s emacs port
      homebrew_cask: name=emacs-mac state=present
    - name: Install regular emacs for in Terminal
      homebrew: name=emacs install_options=HEAD,cocoa,srgb,with-gnutls
    - include: capslock_to_control.yml
    - name: Dock stuff
      command: defaults write com.apple.dock {{ item.key }} {{ item.value }}
      with_items:
        - {key: 'orientation', value: 'right'}
        - {key: 'autohide', value: '-boolean true' }
    - name: Restart Dock
      command: killall Dock
      ignore_errors: yes
    - name: Safari defaults
      command: defaults write com.apple.Safari {{ item.key }} {{ item.value }}
      with_items:
        - {key: 'WebKitDeveloperExtras', value: '-bool true'}
        - {key: 'ShowFavoritesBar', value: '-bool true'}
        - {key: 'IncludeInternalDebugMenu', value: '-bool true'}
        - {key: 'IncludeDevelopMenu', value: '-bool true'}
    - name: Enable full keyboard access for all controls
      command: defaults write NSGlobalDomain AppleKeyboardUIMode -int 3
    - name: Set Control+scrolling to zoom in
      command: defaults write com.apple.universalaccess {{ item.key }} {{ item.value }}
      with_items:
        - {key: 'closeViewScrollWheelToggle', value: '-bool true'}
        - {key: 'HIDScrollZoomModifierMask', value: '-int 262144'}
    - name: FTFF, at least a little bit.
      command: defaults write com.apple.finder {{ item.key }} {{ item.value }}
      with_items:
        # Allow text selection in Quick Look
        - {key: 'QLEnableTextSelection', value: '-bool true'}
        # Use column view in all Finder windows by default
        # Four-letter codes for the other view modes: `icnv`, `clmv`, `Flwv`
        - {key: 'FXPreferredViewStyle', value: '-string "clmv"'}
        # Disable the warning when changing a file extension
        - {key: 'FXEnableExtensionChangeWarning', value: '-bool false'}
        # New Finder window should open home directory
        - {key: 'NewWindowTarget', value: 'PfHm'}
    - name: Avoid creating .DS_Store files on network volumes
      command: defaults write com.apple.desktopservices DSDontWriteNetworkStores -bool true
